export default {
  backup: '备份',
  downloadTheProjectBackupFile: '下载项目备份文件（json格式）',
  restoreProject: '恢复...',
  incorrectUsrPwd: '用户名或密码错误',
  askDeleteUser: '您确定要删除此用户吗？',
  askDeleteTemp: '您确实要删除此模板吗？',
  askDeleteEnv: '您确实要删除此环境吗？',
  askDeleteInv: '您确实要删除此主机配置吗？',
  askDeleteKey: '您确定要删除此密钥吗？',
  askDeleteRepo: '您确定要删除此存储库吗？',
  askDeleteProj: '您确定要删除此项目吗？',
  askDeleteTMem: '您确定要删除此团队成员吗？',
  edit: '编辑',
  nnew: '新建',
  keyFormSshKey: 'SSH 密钥',
  keyFormLoginPassword: '使用密码登录',
  keyFormNone: '无',
  incorrectUrl: 'URL地址不正确',
  username: '用户名',
  username_required: '未填写用户名',
  dashboard: '控制台',
  history: '历史',
  activity: '活动',
  settings: '设置',
  signIn: '登录',
  password: '密码',
  changePassword: '更改密码',
  editUser: '编译用户',
  newProject: '新建项目',
  close: '关闭',
  newProject2: '新建项目...',
  demoMode: 'DEMO MODE',
  task: '任务 #{expr}',
  youCanRunAnyTasks: '您可以运行任何任务',
  youHaveReadonlyAccess: '您只有只读访问权限',
  taskTemplates: '任务模板',
  inventory: '主机配置',
  environment: '环境',
  keyStore: '密钥库',
  repositories: '存储库',
  darkMode: '暗色模式',
  team: '团队',
  users: '用户',
  editAccount: '账户编辑',
  signOut: '注销',
  error: '错误',
  refreshPage: '刷新页面',
  relogin: '重新登录',
  howToFixSigninIssues: '如何解决登录问题',
  firstlyYouNeedAccessToTheServerWhereSemaphoreRunni: '首先，您需要登录运行 Semaphore 的服务器。',
  executeTheFollowingCommandOnTheServerToSeeExisting: '在服务器上执行以下命令查看现有用户：',
  semaphoreUserList: 'semaphore user list',
  youCanChangePasswordOfExistingUser: '您可以更改现有用户的密码：',
  semaphoreUserChangebyloginLoginUser123Password: 'semaphore user change-by-login --login user123 --password {makePasswordExample}',
  orCreateNewAdminUser: '或者创建新的管理员用户：',
  close2: '关闭',
  semaphore: 'SEMAPHORE',
  dontHaveAccountOrCantSignIn: '没有帐户或无法登录？',
  password2: '密码',
  cancel: '关闭',
  noViews: '没有分组视图',
  addView: '新增分组视图',
  editEnvironment: '编辑环境',
  deleteEnvironment: '删除环境',
  environment2: '环境',
  newEnvironment: '新增环境',
  environmentName: '环境名称',
  extraVariables: '扩展变量',
  enterExtraVariablesJson: '添加额外的Json格式变量...',
  environmentVariables: '环境变量',
  enterEnvJson: '添加额外的Json格式环境变量...',
  environmentAndExtraVariablesMustBeValidJsonExample: '环境变量和额外变量必须是有效的 JSON。例如：',
  dashboard2: '控制台',
  ansibleSemaphore: 'Semaphore UI',
  wereSorryButHtmlwebpackpluginoptionstitleDoesntWor: '抱歉，如果未启用 JavaScript，<%= htmlWebpackPlugin.options.title %> 将无法正常工作。请启用它以继续。',
  deleteInventory: '删除主机配置',
  newInventory: '新增主机配置',
  name: '名称',
  userCredentials: '用户凭据',
  sudoCredentialsOptional: 'Sudo 凭据（可选）',
  type: '类型',
  pathToInventoryFile: '主机配置文件路径',
  enterInventory: '编辑主机配置...',
  staticInventoryExample: '静态主机配置示例:',
  staticYamlInventoryExample: '静态 YAML 格式主机配置示例:',
  keyName: '凭据名称',
  loginOptional: '登录名 (可选)',
  usernameOptional: '用户名 (可选)',
  privateKey: '私钥',
  override: '覆盖',
  useThisTypeOfKeyForHttpsRepositoriesAndForPlaybook: '对于 HTTPS 存储库和使用非 SSH 连接的 playbook，请使用此类密钥。',
  deleteKey: '删除凭据',
  newKey: '新增凭据',
  create: '创建',
  newTask: '创建任务',
  cantDeleteThe: '无法删除 {objectTitle}',
  theCantBeDeletedBecauseItUsedByTheResourcesBelow: '无法删除 {objectTitle}，因为它已被如下资源使用',
  projectName: '项目名称',
  allowAlertsForThisProject: '在此项目开启通知',
  telegramChatIdOptional: 'Telegram Chat ID (可选)',
  maxNumberOfParallelTasksOptional: '最大并行任务数 (可选)',
  deleteRepository: '删除存储库',
  newRepository: '新增存储库',
  urlOrPath: 'URL 或路径',
  absPath: 'abs. path',
  branch: '分支',
  accessKey: '访问凭证',
  credentialsToAccessToTheGitRepositoryItShouldBe: '访问 Git 存储库的凭据。它应该是:',
  ifYouUseGitOrSshUrl: '如果您使用 Git 或 SSH URL.',
  ifYouUseHttpsOrFileUrl: '如果您使用 HTTPS 或文件 URL.',
  none: 'None',
  ssh: 'SSH',
  deleteProject: '删除项目',
  save: '保存',
  deleteProject2: '删除项目',
  onceYouDeleteAProjectThereIsNoGoingBackPleaseBeCer: '一旦删除项目，就无法恢复！！！',
  name2: '名称 *',
  title: '标题 *',
  description: '说明',
  required: '必需',
  key: '{expr}',
  surveyVariables: '列出变量',
  addVariable: '添加变量',
  columns: '列',
  buildVersion: '编译版本',
  messageOptional: '说明 (可选)',
  debug: '调试模式',
  dryRun: 'Dry Run',
  diff: '显示差异',
  advanced: '高级选项',
  hide: '隐藏',
  pleaseAllowOverridingCliArgumentInTaskTemplateSett: '请在设置中开启 “允许在任务中自定义 CLI 参数”',
  cliArgsJsonArrayExampleIMyinventoryshPrivatekeythe: 'CLI 测试 (JSON 数组). 例如: [ "-i", "@myinventory.sh", "--private-key=/there/id_rsa", "-vvvv" ]',
  started: '已启动',
  author: '关联用户',
  duration: '说明',
  stop: '停止',
  forceStop: '强制删除',
  confirmTask: '确认',
  deleteTeamMember: '删除团队成员',
  team2: '团队',
  newTeamMember: '新增团队成员',
  user: '用户',
  administrator: '管理员',
  definesStartVersionOfYourArtifactEachRunIncrements: '定义起始版本，每次运行都会增加版本。',
  forMoreInformationAboutBuildingSeeThe: '有关构建的更多信息，请参阅',
  taskTemplateReference: '任务模板参考',
  definesWhatArtifactShouldBeDeployedWhenTheTaskRun: '定义任务运行时应部署哪些产物。',
  forMoreInformationAboutDeployingSeeThe: '有关部署的更多信息，请参阅',
  taskTemplateReference2: '任务模板参考',
  definesAutorunSchedule: '定义计划任务',
  forMoreInformationAboutCronSeeThe: '有关 cron 的更多信息，请参阅',
  cronExpressionFormatReference: 'Cron 表达式格式参考',
  startVersion: '开始版本',
  example000: '例如: 0.0.0',
  buildTemplate: '构建模板',
  autorun: '自动运行',
  playbookFilename: 'Playbook 文件名称 *',
  exampleSiteyml: '例如: site.yml',
  inventory2: '主机配置 *',
  repository: '存储库',
  environment3: '环境 *',
  vaultPassword: 'Vault 密码',
  vaultPassword2: 'Vault 密码',
  view: 'View',
  cron: 'Cron',
  iWantToRunATaskByTheCronOnlyForForNewCommitsOfSome: '我想通过 cron 运行一个任务，仅用于某些存储库的新提交',
  repository2: '存储库',
  cronChecksNewCommitBeforeRun: 'Cron 在运行前检查新的提交',
  readThe: '阅读',
  toLearnMoreAboutCron: '了解有关 Cron 的更多信息。',
  suppressSuccessAlerts: 'Suppress success alerts',
  cliArgsJsonArrayExampleIMyinventoryshPrivatekeythe2: 'CLI 参数 (JSON 数组格式). 例如: [ "-i", "@myinventory.sh", "--private-key=/there/id_rsa", "-vvvv" ]',
  allowCliArgsInTask: '允许任务中自定义 CLI 参数',
  docs: '文档',
  editViews: '编辑视图',
  newTemplate: '新增模板',
  taskTemplates2: '任务模板',
  all: '全部',
  notLaunched: '未启动',
  by: 'by {user_name}',
  editTemplate: '编辑模板',
  newTemplate2: '新建模板',
  deleteTemplate: '删除模板',
  playbook: 'Playbook',
  email: '邮箱',
  adminUser: '管理员用户',
  sendAlerts: '发送通知',
  deleteUser: '删除用户',
  newUser: '新增用户',
  re: 'Re{getActionButtonTitle}',
  teamMember: '{expr} Team Member',
  taskId: '任务 ID',
  version: '版本',
  status: '状态',
  start: '启动',
  actions: '任务',
  alert: '通知',
  admin: '管理员',
  role: '角色',
  external: '扩展',
  time: '时间',
  path: '路径',
  gitUrl: 'Git 存储库链接',
  sshKey: 'SSH 密钥',
  lastTask: '最后一次任务',
  task2: '任务',
  build: '编译',
  deploy: '部署',
  run: '执行',
  add: '添加',
  password_required: '密码是必填项',
  name_required: '名称是必填项',
  user_credentials_required: '用户凭证是必填项',
  type_required: '类型是是必填项',
  path_required: '主机配置文件路径是必填项',
  private_key_required: '私钥是是必填项',
  project_name_required: '项目名称是必填项',
  repository_required: '存储库地址是必填项',
  branch_required: '分支是必填项',
  key_required: 'Key 是必填项',
  user_required: '用户是必填项',
  build_version_required: '编译版本是必填项',
  title_required: '标题是必填项',
  isRequired: '是必填项',
  mustBeInteger: '必须是整数',
  mustBe0OrGreater: '必须大于或等于 0',
  start_version_required: '开始版本是必填项',
  playbook_filename_required: 'Playbook 文件名称是必填项',
  inventory_required: '主机配置是必填项',
  environment_required: '环境配置是必填项',
  email_required: '邮箱是必填项',
  build_template_required: '编译模板是必填项',
  Task: '任务',
  Build: '编译',
  Deploy: '部署',
  Run: '运行',
  CreateDemoProject: '创建模板项目',
  LeaveProject: '离开项目',

};
